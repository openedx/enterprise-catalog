# Generated by Django 3.2.8 on 2021-11-09 23:00

from django.db import migrations, models
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0028_command_no_sync_option'),
    ]
    operations = [
        migrations.CreateModel(
            name='ContentMetadataToQueries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('catalog_query', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.catalogquery')),
                ('content_metadata', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.contentmetadata')),
            ],
            options={
                'unique_together': {('content_metadata_id', 'catalog_query_id', 'deleted_at')},
                'index_together': {('catalog_query_id', 'deleted_at'), ('content_metadata_id', 'deleted_at')},
            },
        ),
        migrations.AddField(
            model_name='contentmetadata',
            name='catalog_query_mapping',
            field=models.ManyToManyField(through='catalog.ContentMetadataToQueries', to='catalog.CatalogQuery'),
        ),
        migrations.RunSQL(
            sql="""
                /* there's some funky stuff with defaults and the timestamped model */
                INSERT INTO catalog_contentmetadatatoqueries (catalog_query_id, content_metadata_id, created, modified)
                SELECT catalogquery_id, contentmetadata_id, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP FROM catalog_contentmetadata_catalog_queries;
            """,
            # Noop the reverse sql as this table is large enough to cause issues with a large insert and preserving
            # these particular records on revert is not of high priority
            reverse_sql=migrations.RunSQL.noop
        )
    ]
